include utils.incl

<define IGNORE_DECL TRUE/>
<define IGNORE_STMT FALSE />
<<*<define BACKTRACK TRUE/>

<define PARSE CODE.Program/>

<define CUR_FUNCTION ""/>
<define COLLECT_CALLS  "" />

<code CallGraph pars=(content :LIST(CODE.CallRel, "\n")) > 
@content@

</code>

<code CallRel pars=(from, to)> @from@ -> @to@ </code>

<code Program parse=LIST(DECLARATION, "\n")/>

<code IgnoreDecl pars=(content: (~("\n"|"\r")...)) 
                     rebuild=(IGNORE_DECL? "" : content) > 
@content@ </code>


<code LB_Block pars=(content : CODE.InsideLB) > { @content@ } </code>

<code CtrlExp pars=(content : CODE.InsideLP) > (@content@) </code>

<code InsideLB parse=LIST(LB_Block | CODE.NoLRB,"") />
<code InsideLP parse=LIST(CtrlExp | CODE.NoLRP,"") />

<code NoLRB parse=(~("{"|"}"))... />
<code NoLRP parse=(~("("|")"|";"|"{"|"}"))... />

